@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }
@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }
@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }
/* Browser always apply some elements to the rendering, this eliminates that wirh margin and padding 0*/
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  /* Changes box model so borders and padding are no longer added to total width and total height specified */
  /* box-sizing: border-box; */
  /* set to inherit from body  */
  box-sizing: inherit; }

/* SET root font size to use rem units for breakpoint adjustments 
    SET to 10px so we know 1 rem == 10px
    but takes away from user ability to set font-size
    so use 62.5% to allow user adjustments
*/
html {
  font-size: 62.5%; }

body {
  /* Fonts are inherited by children */
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: #777;
  /* white line around the hole page. not being inherited by other elements */
  padding: 3rem;
  box-sizing: border-box; }

body {
  /* Fonts are inherited by children */
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: #777;
  /* white line around the hole page. not being inherited by other elements */
  padding: 3rem; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /* To deal with shaky ease in/out  
  back part of element is hidden
  */
  backface-visibility: hidden;
  margin-bottom: 6rem; }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 2s;
    animation-timing-function: ease-out;
    /* animation-iteration-count: 3; */
    /* animation-delay: 3s; */ }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    /* animation-name: moveInRight;
    animation-duration: 2s;
    animation-timing-function: ease-out; 
    Combined Below */
    animation: moveInRight 2s ease-out; }

.btn {
  /* Psuedo classes are a state of element  */ }
  .btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    /* Inline block elemenet is treated as text */
    display: inline-block;
    border-radius: 10rem;
    /* Transition has to be on initial state  */
    transition: all .2s;
    position: relative;
    font-size: 1.6rem; }
  .btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }
    .btn:hover::after {
      transform: scaleX(1.5) scaleY(1.6);
      opacity: 0; }
  .btn:active {
    transform: translateY(-1px);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }
  .btn--white {
    background-color: #fff;
    color: #777; }
    .btn--white::after {
      background-color: #fff; }
  .btn::after {
    /* content and display must be specified even if blank */
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s; }
  .btn--animated {
    animation: moveInBottom .5s ease-out .74s;
    /* auto apply animation of 0% before animation starts */
    animation-fill-mode: backwards; }

.row {
  max-width: 114rem;
  background-color: #eee;
  margin: 0 auto; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem) / 2);
    background-color: orangered; }
    .row .col-1-of-2:not(:last-child) {
      margin-right: 6rem; }

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url("../img/hero.jpg");
  /* cover tries to fit element inside of box */
  background-size: cover;
  /* Sticks image to top regardless of viewport size */
  background-position: top;
  position: relative;
  /* Specify corners to make polygon clip; starts top right */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 4.5rem; }
  .header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center; }
